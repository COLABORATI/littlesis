<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Org extends BaseOrg
{
	public function onEntitySave(Entity $entity)
	{
    if (!$entity->rawGet('name'))
    {
  		$entity->setEntityField('name', trim($this->name));
  	}
	}	
	
	public function getNameRegex()
	{
	  $name = $this->name;

    $name = OrgTable::removeSuffixes($name);
    
    $name = LsString::escapeStringForRegex($name);
    $name = str_replace(',',',?',$name);
    $name = str_replace('&','(&|\s*and\s*)',$name);
    return $name;
	}
	
	public function hasSimilarName($str, $strict = false)
	{
    $str = OrgTable::removeSuffixes($str);
    $str = trim($str);
    
    if (!strlen($str))
    {
      return false;
    }    
    
    $terms = LsQuery::splitSearchPhrase($str);
    
    $matched = false;
    $names = $this->Entity->getAllNames();
    
    foreach($terms as &$term)
    {
      if (is_array($term))
      {
        foreach($term as &$t)
        {
          $t = LsString::escapeStringForRegex($t);
        }
        $term = implode('|', $term);
      }
      else
      {
        $term = LsString::escapeStringForRegex($term);
      }
    }
    unset($term);
    if ($terms[0] == 'The')
    {
      array_shift($terms);
    }
    
    foreach($names as $name)
    {
      $matched = true;
      
      if (!preg_match('/^(The\s+)?(' . $terms[0] . ')/isu',$name))
      {
        $matched = false;
        continue;      
      }
      foreach($terms as $term)
      {
        $new = preg_replace('/((^|\s)|\b)(' . $term . ')(\b|(\s|$))/isu',' ',$name,1);
        if ($new == $name)
        {
          $matched = false;
          continue;
        }
        $name = $new;
      }

      $name = trim(OrgTable::removeSuffixes($name));

      if ($strict && $matched && strlen($name) > 0 && count(LsString::split($name)) >= $strict)
      {
        $matched = false;
      }
      
      if ($matched == true)
      {
        break;
      }
    }
    return $matched;
	}
	
	public function getBoardRelationships($current = 1)
	{
    $q = LsDoctrineQuery::create()
      ->from('Relationship r')
      ->leftJoin('r.Position p')
      ->addWhere('r.entity2_id = ?' , $this->entity_id)
      ->addWhere('r.category_id = ?', RelationshipTable::POSITION_CATEGORY)
      ->addWhere('p.is_board = ?', '1');
    if ($current !== null)
    {     
      $q->addWhere('r.is_current = ?', $current);
    }
    $rels = $q->execute();
    return $rels;
	}
	
}
