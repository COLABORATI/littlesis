<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Reference extends BaseReference
{
  public function getFieldsArray()
  {
    return $this->fields ? explode(',', $this->fields) : array();
  }


  public function addFields($fields)
  {
    $newFields = $this->getFieldsArray();

    foreach ((array) $fields as $field)
    {
      if (!$field || !is_string($field))
      {
        continue;
      }

      if (!in_array($field, $newFields))
      {
        $newFields[] = $field;
      }
    }
  
    sort($newFields);
    
    $this->fields = LsString::emptyToNull(implode(',', $newFields));
  }  
  
  
  public function removeFields($fields)
  {
    $diff = array_diff($this->getFieldsArray(), (array) $fields);
    sort($diff);
    
    return $this->fields = LsString::emptyToNull(implode(',', $diff));
  }
  
  
  public function setFieldsArray($fields)
  {
    if (!is_array($fields))
    {
      throw new Exception("Fields must be an array");
    }

    sort($fields);
    return $this->fields = implode(',', $fields);
  }
  
  
  public function hasFields($fields)
  {
    return (bool) array_diff((array) $fields, $this->getFieldsArray());
  }
  
  
  public function hasExcerpt($excerpt)
  {
    return (bool) Doctrine_Query::create()
      ->from('ReferenceExcerpt e')
      ->where('e.reference_id = ? AND e.body = ?', array($this->id, $excerpt))
      ->fetchOne();
  }
  
  
  public function addExcerpt($body)
  {
    if (!$body)
    {
      throw new Exception("Can't add blank excerpt to Reference");
    }


    if (!$this->hasExcerpt($body))
    {
      $ex = new ReferenceExcerpt;
      $ex->body = $body;
      $this->Excerpt[] = $ex;
      
      return true;
    }
    else
    {
      return false;
    }
  }
  
  
  public function getDisplayName()
  {
    return ReferenceTable::getDisplayName($this);
  }


  public function setPublicationDate($str)
  {
    $this->_set('publication_date', Dateable::convertForDb($str));
  }
}