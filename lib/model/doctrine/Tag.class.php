<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Tag extends BaseTag
{
  public function __toString()
  {
    $ret = $this->getName();
    
    if (!$this->is_visible)
    {
      $ret .= ' (admin)';
    }
    
    return $ret;
  }


  public function getName()
  {
    if ($name = $this->_get('name', false))
    {
      return $name;
    }
    else
    {
      return $this->triple_namespace . ':' . $this->triple_predicate . ':' . $this->triple_value;
    }  
  }


  public function getInternalUrl()
  {
    return 'tag/view?name=' . $this->getName();
  }

  
  public function getObjectModels()
  {
    $results = LsDoctrineQuery::create()
      ->select('DISTINCT(ot.object_model) as model')
      ->from('ObjectTag ot')
      ->where('ot.tag_id = ?', $this->id)
      ->orderBy('model ASC')
      ->setHydrationMode(Doctrine::HYDRATE_NONE)
      ->fetchOne();


    return $results ? array_values($results) : array();
  }
  
  
  public function getObjectsByModelQuery($model)
  {
    $lower = strtolower($model);
  
    return LsDoctrineQuery::create()
      ->from($model . ' ' . $lower)
      ->where('EXISTS (SELECT id FROM ObjectTag ot WHERE ot.object_model = \'' . $model . '\' AND ot.object_id = ' . $lower . '.id AND ot.tag_id = ?)', $this->id);
  }
  
  
  public function getObjects()
  {
    $objects = array();
  
    foreach ($this->getOjbectModels() as $model)
    {
      $objects = array_merge($objects, $this->getObjectsByModelQuery($model)->execute());
    }
    
    return $objects;
  }
  
  
  public function countObjects()
  {
    return LsDoctrineQuery::create()
      ->from('ObjectTag ot')
      ->where('ot.tag_id = ?', $this->id)
      ->count();
  }
  
  
  public function getLatestObjectTag()
  {
    return LsDoctrineQuery::create()
      ->from('ObjectTag ot')
      ->where('ot.tag_id = ?', $this->id)
      ->orderBy('ot.id DESC')
      ->fetchOne();
  }
}