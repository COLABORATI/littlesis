<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasesfGuardGroup extends sfDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('sf_guard_group');
    $this->hasColumn('id', 'integer', null, array('type' => 'integer', 'primary' => true, 'autoincrement' => true));
    $this->hasColumn('name', 'string', 255, array('type' => 'string', 'unique' => true, 'length' => '255'));
    $this->hasColumn('blurb', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('description', 'string', 1000, array('type' => 'string', 'length' => '1000'));
    $this->hasColumn('contest', 'string', 1000, array('type' => 'string', 'length' => '1000'));
    $this->hasColumn('is_working', 'boolean', null, array('type' => 'boolean', 'notnull' => true, 'default' => 0));
    $this->hasColumn('is_private', 'boolean', null, array('type' => 'boolean', 'notnull' => true, 'default' => 0));
    $this->hasColumn('display_name', 'string', 255, array('type' => 'string', 'notnull' => true, 'length' => '255'));
    $this->hasColumn('home_network_id', 'integer', null, array('type' => 'integer', 'notnull' => true));
  }

  public function setUp()
  {
    $this->hasMany('sfGuardUser as users', array('refClass' => 'sfGuardUserGroup',
                                                 'local' => 'group_id',
                                                 'foreign' => 'user_id'));

    $this->hasMany('sfGuardPermission as permissions', array('refClass' => 'sfGuardGroupPermission',
                                                             'local' => 'group_id',
                                                             'foreign' => 'permission_id'));

    $this->hasMany('sfGuardGroupPermission', array('local' => 'id',
                                                   'foreign' => 'group_id'));

    $this->hasMany('sfGuardUserGroup', array('local' => 'id',
                                             'foreign' => 'group_id'));

    $this->hasMany('sfGuardGroupList', array('local' => 'id',
                                             'foreign' => 'group_id'));

    $timestampable0 = new Doctrine_Template_Timestampable();
    $this->actAs($timestampable0);
  }
}