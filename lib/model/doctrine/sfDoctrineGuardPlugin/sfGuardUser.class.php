<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUser extends PluginsfGuardUser
{ 
  public function isCurrentUser()
  {
    if (!$this->id)
    {
      return false;
    }
    
    $user = sfContext::getInstance()->getUser();

    if ($user->isAuthenticated() && $user->getGuardUser()->id == $this->id)
    {
      return true;
    }
    
    return false;
  }


  public function getInternalUrl($action=null, $params=null)
  {
    return sfGuardUserTable::getInternalUrl($this, $action, $params);
  }


  public function hasCredential($credential)
  {
    return in_array($credential, $this->getAllPermissionNames());
  }  


  public function getModificationsQuery()
  {
    if (!$this->id)
    {
      throw new Exception("Can't get modifications query for new sfGuardUser");
    }

    return LsDoctrineQuery::create()
      ->from('Modification m')
      ->leftJoin('m.Field f')
      ->where('m.user_id = ?', $this->id)
      ->orderBy('m.created_at DESC');  
  }
  
  
  public function getCommentsQuery()
  {
    if (!$this->id)
    {
      throw new Exception("Can't get comments query for new sfGuardUser");
    }

    return LsDoctrineQuery::create()
      ->from('Comment c')
      ->where('c.user_id = ?', $this->id)
      ->orderBy('c.created_at DESC');  
  }
  
  
  public function isGroupOwner($name)
  {
    $db = Doctrine_Manager::connection();
    $from = 'sf_guard_user_group ug LEFT JOIN sf_guard_group g';
    $where = 'ug.user_id = ? AND ug.is_owner = 1 AND g.name = ?';
    $params = array($this->id, $name);
    $sql = 'SELECT COUNT(*) FROM ' . $from . ' ON (ug.group_id = g.id) WHERE ' . $where;
    $stmt = $db->execute($sql, $params);
    
    return ($stmt->fetch(PDO::FETCH_COLUMN) > 0);
  }
}